generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum AccountType {
    personal
    company
}

enum ProjectRole {
    admin
    member
    creator
}

enum TaskStatus {
    pending
    inProgress
    done
}

model User {
    id          Int @id @default(autoincrement())
    email       String @unique
    avatar      String @default("/media/avatars/default.png")
    username    String @db.VarChar(16) @unique
    password    String
    accountType AccountType
    projects    UserProject[]
    tasks       Task[]
    @@index([id])
}

model Project {
    id          String @id @default(uuid())
    name        String
    users       UserProject[]
    tasks       Task[]
}

model UserProject {
    userId      Int
    user        User @relation(fields: [userId], references: [id], onDelete: Cascade)
    projectId   String
    project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
    role        ProjectRole @default(member)
    @@id([userId, projectId])
    @@index([userId, projectId])
}

model Task {
    id          Int @id @default(autoincrement())
    creatorId   Int
    creator     User @relation(fields: [creatorId], references: [id], onDelete: Cascade)
    projectId   String
    project     Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
    description String @db.VarChar(255)
    status      TaskStatus @default(pending)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}
